alpha = _{ 'a'..'z' | 'A'..'Z' }
digit = _{ '0'..'9' }
WHITESPACE = _{ " " | "\t" | "\n" }

ID     = @{ alpha ~ (alpha | digit)* }
NUM    = @{ digit+ ~ ("." ~ digit+)? }
BINOP0 = @{ "+" | "-" }
BINOP1 = @{ "*" | "/" }
BINOP2 = @{ "." }

stmt = {
    stmt_assign
  | expr ~ ";"
}

stmt_assign = { ID ~ "=" ~ expr ~ ";" }

expr  = { expr1 ~ (BINOP0 ~ expr1)* }
expr1 = { expr2 ~ (BINOP1 ~ expr2)* }
expr2 = { expr3 ~ (BINOP2 ~ expr3)* }
expr3 = { expr_base }

expr_base = {
    matrix
  | lam_expr
  | fun_app
  | let_expr
  | "(" ~ expr ~ ")"
  | NUM
  | ID
}

matrix = { mat_row+ }
mat_row = { "{" ~ expr+ ~ "}" }

lam_expr = { "lam" ~ param_list ~ ":" ~ expr }
param_list = { ID+ }

fun_app = {
    ID ~ "(" ~ arg_list ~ ")"
  | "(" ~ expr ~ ")" ~ "(" ~ arg_list ~ ")"
}
arg_list = { expr ~ ("," ~ expr)* }

let_expr = { "let" ~ var_bindings ~ "in" ~ expr }
var_bindings = { ID ~ "=" ~ expr ~ ("," ~ ID ~ "=" ~ expr)* }
